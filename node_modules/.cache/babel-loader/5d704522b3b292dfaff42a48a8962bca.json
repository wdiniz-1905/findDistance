{"ast":null,"code":"import _classCallCheck from \"/home/walterjunior/sequor/threeD/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/walterjunior/sequor/threeD/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/walterjunior/sequor/threeD/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/walterjunior/sequor/threeD/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/walterjunior/sequor/threeD/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/walterjunior/sequor/threeD/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scene = new THREE.Scene();\n      var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1000);\n      var renderer = new THREE.WebGLRenderer();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      this.mount.appendChild(renderer.domElement);\n      var geometry = new THREE.BoxGeometry(2, 2, 2, 1, 1, 1);\n      var material = new THREE.MeshBasicMaterial({\n        color: 0x00ff00\n      });\n      var cube = new THREE.Mesh(geometry, material);\n      var bGeometry = new THREE.BufferGeometry();\n      bGeometry.fromGeometry(geometry);\n      var geometry2 = new THREE.CylinderGeometry(5, 5, 20, 5, 5);\n      var material2 = new THREE.MeshBasicMaterial({\n        color: 0xffff00\n      });\n      var cylinder = new THREE.Mesh(geometry2, material2);\n      var bGeometry2 = new THREE.BufferGeometry();\n      bGeometry2.fromGeometry(geometry2);\n      scene.add(cube);\n      scene.add(cylinder);\n      var a = new THREE.Vector3(0, 0, 0);\n      var X = 0;\n      var Y = 0;\n      var Z = 0;\n      cube.position.x = 0;\n      cube.position.y = 0;\n      cube.position.z = 0;\n      camera.lookAt(a);\n      var car = [];\n      var car2 = [];\n      var minDistance;\n      var positions = bGeometry.getAttribute('position');\n      var positions2 = bGeometry2.getAttribute('position');\n\n      for (var k = 0; k < positions.count; k++) {\n        var myPosition = new THREE.Vector3(positions.array[k * 3] + X, positions.array[k * 3 + 1] + Y, positions.array[k * 3 + 2] + Z);\n        car[k] = myPosition;\n        var myPosition2 = new THREE.Vector3(positions2.array[k * 3] + X, positions2.array[k * 3 + 1] + Y, positions2.array[k * 3 + 2] + Z);\n        car2[k] = myPosition2;\n        console.log(car2[k].x);\n      }\n\n      var animate = function animate() {\n        requestAnimationFrame(animate); //cube.rotation.x += 0.01;\n        //cube.rotation.y += 0.01;\n        //console.log(bGeometry.getAttribute('position'));\n\n        renderer.render(scene, camera);\n      };\n\n      animate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        ref: function ref(_ref) {\n          return _this.mount = _ref;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/home/walterjunior/sequor/threeD/src/index.js"],"names":["React","Component","ReactDOM","THREE","App","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","mount","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","bGeometry","BufferGeometry","fromGeometry","geometry2","CylinderGeometry","material2","cylinder","bGeometry2","add","a","Vector3","X","Y","Z","position","x","y","z","lookAt","car","car2","minDistance","positions","getAttribute","positions2","k","count","myPosition","array","myPosition2","console","log","animate","requestAnimationFrame","render","ref","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\n\nclass App extends Component {\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      1,\n      1000\n    );\n\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.mount.appendChild(renderer.domElement);\n\n    var geometry = new THREE.BoxGeometry(2, 2, 2,1,1,1);\n    var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n    var cube = new THREE.Mesh(geometry, material);\n    var bGeometry = new THREE.BufferGeometry();\n    bGeometry.fromGeometry(geometry);\n\n    var geometry2 = new THREE.CylinderGeometry( 5, 5, 20,5,5);\n    var material2 = new THREE.MeshBasicMaterial( {color: 0xffff00} );\n    var cylinder = new THREE.Mesh( geometry2, material2 );\n    var bGeometry2 = new THREE.BufferGeometry();\n    bGeometry2.fromGeometry(geometry2);\n    \n    scene.add(cube);\n    scene.add(cylinder);\n    var a = new THREE.Vector3(0, 0, 0);\n    const X=0;\n    const Y=0;\n    const Z=0;\n    cube.position.x = 0;\n    cube.position.y = 0;\n    cube.position.z = 0;\n    camera.lookAt(a)\n    var car=[];\n    var car2=[];\n    var minDistance;\n    var positions = bGeometry.getAttribute('position');\n    var positions2 = bGeometry2.getAttribute('position');\n    for(let k=0;k<positions.count;k++){\n    var myPosition =  new THREE.Vector3(positions.array[k*3]+X, positions.array[k*3 + 1]+Y, positions.array[k*3 + 2]+Z,);\n    car[k]=myPosition;\n    var myPosition2 =  new THREE.Vector3(positions2.array[k*3]+X, positions2.array[k*3 + 1]+Y, positions2.array[k*3 + 2]+Z,);\n    car2[k]=myPosition2;\n    console.log(car2[k].x);\n    }\n    var animate = function() {\n      requestAnimationFrame(animate);\n      //cube.rotation.x += 0.01;\n      //cube.rotation.y += 0.01;\n      //console.log(bGeometry.getAttribute('position'));\n     renderer.render(scene, camera);\n    };\n\n    animate();\n    \n  }\n  render() {\n    return <div ref={ref => (this.mount = ref)} />;\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}